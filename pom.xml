<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>info.jab.cli</groupId>
    <artifactId>puml-to-png</artifactId>
    <version>0.5.0</version>

    <properties>
        <java.version>24</java.version>
        <maven.version>3.9.9</maven.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- Dependencies -->
        <jspecify.version>1.0.0</jspecify.version>
        <slf4j.version>2.0.17</slf4j.version>
        <logback.version>1.5.18</logback.version>
        <picocli.version>4.7.7</picocli.version>
        <jcolor.version>5.5.1</jcolor.version>
        <jfiglet.version>0.0.9</jfiglet.version>

        <!-- Test dependencies -->
        <junit.version>5.13.2</junit.version>
        <assertj.version>3.27.3</assertj.version>
        <mockito.version>5.18.0</mockito.version>
        <byte-buddy.version>1.17.5</byte-buddy.version>
        <wiremock.version>3.13.1</wiremock.version>

        <!-- Maven Extensions -->
        <maven-extensions-timeline.version>2.0.3</maven-extensions-timeline.version>
        <maven-extensions-build-cache.version>1.2.0</maven-extensions-build-cache.version>

        <!-- Maven Plugins -->
        <maven-plugin-flatten.version>1.7.0</maven-plugin-flatten.version>
        <maven-plugin-enforcer.version>3.5.0</maven-plugin-enforcer.version>
        <extra-enforcer-rules.version>1.9.0</extra-enforcer-rules.version>
        <maven-plugin-compiler.version>3.14.0</maven-plugin-compiler.version>
        <error-prone.version>2.38.0</error-prone.version>
        <nullaway.version>0.12.7</nullaway.version>
        <maven-plugin-surefire.version>3.5.3</maven-plugin-surefire.version>
        <maven-plugin-failsafe.version>3.5.3</maven-plugin-failsafe.version>
        <maven-plugin-jxr.version>3.6.0</maven-plugin-jxr.version>
        <maven-plugin-jacoco.version>0.8.13</maven-plugin-jacoco.version>
        <maven-plugin-versions.version>2.18.0</maven-plugin-versions.version>
        <maven-plugin-git-commit-id.version>4.9.10</maven-plugin-git-commit-id.version>
        <maven-plugin-sonar.version>4.0.0.4121</maven-plugin-sonar.version>
        <maven-plugin-spotless.version>2.44.5</maven-plugin-spotless.version>

        <!-- Coverage -->
        <coverage.level>80</coverage.level>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${junit.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-bom</artifactId>
                <version>${mockito.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Null Safety Annotations -->
        <dependency>
            <groupId>org.jspecify</groupId>
            <artifactId>jspecify</artifactId>
            <version>${jspecify.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>
        <dependency>
            <groupId>info.picocli</groupId>
            <artifactId>picocli</artifactId>
            <version>${picocli.version}</version>
        </dependency>
        <dependency>
            <groupId>com.github.lalyos</groupId>
            <artifactId>jfiglet</artifactId>
            <version>${jfiglet.version}</version>
        </dependency>
        <dependency>
            <groupId>com.diogonunes</groupId>
            <artifactId>JColor</artifactId>
            <version>${jcolor.version}</version>
        </dependency>

        <!-- Test Dependencies -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- Optionally: parameterized tests support -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- AssertJ for fluent assertions -->
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- Mockito for mocking -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- Mockito needs these dependencies updated to fix the issue about
        org.mockito.plugins.MockMaker -->
        <dependency>
            <groupId>net.bytebuddy</groupId>
            <artifactId>byte-buddy-agent</artifactId>
            <version>${byte-buddy.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>net.bytebuddy</groupId>
            <artifactId>byte-buddy</artifactId>
            <version>${byte-buddy.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.wiremock</groupId>
            <artifactId>wiremock-standalone</artifactId>
            <version>${wiremock.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <extensions>
            <extension>
                <groupId>io.takari.maven</groupId>
                <artifactId>maven-timeline</artifactId>
                <version>${maven-extensions-timeline.version}</version>
            </extension>
        </extensions>

        <plugins>
            <plugin>
                <groupId>com.diffplug.spotless</groupId>
                <artifactId>spotless-maven-plugin</artifactId>
                <version>${maven-plugin-spotless.version}</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                    <java>
                        <removeUnusedImports />
                        <importOrder>
                            <order>,\#</order>
                        </importOrder>
                        <endWithNewline />
                        <trimTrailingWhitespace />
                        <indent>
                            <spaces>true</spaces>
                            <spacesPerTab>4</spacesPerTab>
                        </indent>
                    </java>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <phase>process-sources</phase>
                    </execution>
                </executions>
            </plugin>

            <!-- Maven Enforcer Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>${maven-plugin-enforcer.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>extra-enforcer-rules</artifactId>
                        <version>${extra-enforcer-rules.version}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>enforce</id>
                        <configuration>
                            <rules>
                                <dependencyConvergence />
                                <banDuplicatePomDependencyVersions />
                                <banCircularDependencies />
                                <requireMavenVersion>
                                    <version>${maven.version}</version>
                                </requireMavenVersion>
                                <requireJavaVersion>
                                    <version>${java.version}</version>
                                </requireJavaVersion>
                                <bannedDependencies>
                                    <excludes>
                                        <exclude>org.projectlombok:lombok</exclude>
                                    </excludes>
                                </bannedDependencies>
                            </rules>
                            <fail>true</fail>
                        </configuration>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Maven Compiler Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-plugin-compiler.version}</version>
                <configuration>
                    <release>${java.version}</release>
                    <compilerArgs>
                        <arg>-Xlint:all</arg>
                        <arg>-Werror</arg>
                        <!-- Error prone settings-->
                        <arg>-XDcompilePolicy=simple</arg>
                        <arg>--should-stop=ifError=FLOW</arg>
                        <arg>-Xplugin:ErrorProne \
                            -Xep:NullAway:ERROR \
                            -XepOpt:NullAway:JSpecifyMode=true \
                            -XepOpt:NullAway:TreatGeneratedAsUnannotated=true \
                            -XepOpt:NullAway:CheckOptionalEmptiness=true \
                            -XepOpt:NullAway:HandleTestAssertionLibraries=true \
                            -XepOpt:NullAway:AssertsEnabled=true \
                            -XepOpt:NullAway:AnnotatedPackages=info.jab
                        </arg>
                    </compilerArgs>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>com.google.errorprone</groupId>
                            <artifactId>error_prone_core</artifactId>
                            <version>${error-prone.version}</version>
                        </path>
                        <path>
                            <groupId>com.uber.nullaway</groupId>
                            <artifactId>nullaway</artifactId>
                            <version>${nullaway.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>

            <!-- Maven Surefire Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-plugin-surefire.version}</version>
                <configuration>
                    <skipAfterFailureCount>1</skipAfterFailureCount>
                    <includes>
                        <include>**/*Test.java</include>
                    </includes>
                    <excludes>
                        <exclude>**/*IT.java</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <!-- Maven Failsafe Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven-plugin-failsafe.version}</version>
                <configuration>
                    <includes>
                        <include>**/*IT.java</include>
                    </includes>
                    <excludes>
                        <exclude>**/*Test.java</exclude>
                    </excludes>
                    <systemPropertyVariables>
                        <ENABLE_INTEGRATION_TESTS>${ENABLE_INTEGRATION_TESTS}</ENABLE_INTEGRATION_TESTS>
                    </systemPropertyVariables>
                    <environmentVariables>
                        <ENABLE_INTEGRATION_TESTS>${ENABLE_INTEGRATION_TESTS}</ENABLE_INTEGRATION_TESTS>
                    </environmentVariables>
                    <!-- Skip integration test failures when running in CI or when network
                    connectivity is limited -->
                    <testFailureIgnore>true</testFailureIgnore>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Versions Maven Plugin -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>${maven-plugin-versions.version}</version>
                <configuration>
                    <allowSnapshots>false</allowSnapshots>
                </configuration>
            </plugin>

            <!-- Git Commit ID Plugin -->
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <version>${maven-plugin-git-commit-id.version}</version>
                <executions>
                    <execution>
                        <id>get-the-git-infos</id>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                        <phase>initialize</phase>
                    </execution>
                </executions>
                <configuration>
                    <generateGitPropertiesFile>true</generateGitPropertiesFile>
                    <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
                    <commitIdGenerationMode>full</commitIdGenerationMode>
                </configuration>
            </plugin>

            <!-- Maven Shade Plugin for executable JAR -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.6.0</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <filters>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                        <exclude>META-INF/MANIFEST.MF</exclude>
                                        <exclude>META-INF/versions/*/module-info.class</exclude>
                                        <exclude>module-info.class</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                            <transformers>
                                <transformer
                                    implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>info.jab.core.MainApplication</mainClass>
                                </transformer>
                                <transformer
                                    implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
                                <transformer
                                    implementation="org.apache.maven.plugins.shade.resource.ApacheLicenseResourceTransformer" />
                                <transformer
                                    implementation="org.apache.maven.plugins.shade.resource.ApacheNoticeResourceTransformer" />
                            </transformers>
                            <createDependencyReducedPom>false</createDependencyReducedPom>
                            <minimizeJar>false</minimizeJar>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>jacoco</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>${maven-plugin-jacoco.version}</version>
                        <executions>
                            <execution>
                                <id>prepare-agent</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>report</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>check</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                                <configuration>
                                    <rules>
                                        <rule>
                                            <element>BUNDLE</element>
                                            <limits>
                                                <limit>
                                                    <counter>LINE</counter>
                                                    <value>COVEREDRATIO</value>
                                                    <minimum>${coverage.level}%</minimum>
                                                </limit>
                                                <limit>
                                                    <counter>BRANCH</counter>
                                                    <value>COVEREDRATIO</value>
                                                    <minimum>${coverage.level}%</minimum>
                                                </limit>
                                            </limits>
                                        </rule>
                                    </rules>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>sonar</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <!-- Sonar Configuration -->
                <sonar.organization>jabrena</sonar.organization>
                <sonar.projectKey>jabrena_plantuml-to-png-mcp</sonar.projectKey>
                <sonar.projectName>PlantUML to PNG MCP</sonar.projectName>
                <sonar.host.url>https://sonarcloud.io</sonar.host.url>
                <sonar.java.source>${java.version}</sonar.java.source>
                <sonar.java.target>${java.version}</sonar.java.target>
                <sonar.java.binaries>target/classes</sonar.java.binaries>
                <sonar.java.test.binaries>target/test-classes</sonar.java.test.binaries>
                <sonar.sources>src/main/java</sonar.sources>
                <sonar.tests>src/test/java</sonar.tests>
                <sonar.coverage.exclusions>**/*Test*.java,**/*IT*.java</sonar.coverage.exclusions>
                <sonar.cpd.exclusions>**/*Test*.java,**/*IT*.java</sonar.cpd.exclusions>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.sonarsource.scanner.maven</groupId>
                        <artifactId>sonar-maven-plugin</artifactId>
                        <version>${maven-plugin-sonar.version}</version>
                        <executions>
                            <execution>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sonar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <reporting>
        <plugins>
            <!-- Generates HTML test reports -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>${maven-plugin-surefire.version}</version>
                <configuration>
                    <outputName>junit-report</outputName>
                    <showSuccess>true</showSuccess>
                </configuration>
            </plugin>

            <!-- Adds links to source code in reports -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>${maven-plugin-jxr.version}</version>
            </plugin>
        </plugins>
    </reporting>
</project>